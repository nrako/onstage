#!/usr/bin/env node
/*jshint strict:false */

// Git pre-commit hook
// runs staged files through the relevant linter / hinter

// Start timing
var time = new Date();
var start = time.getTime();

// Dependencies
var _ = require('lodash'),
    s = require('shelljs'),
    c = require('colors');

// Get all staged Files
var f = s.exec('git diff --cached --name-only --diff-filter=ACM', {silent: true}).output;
var files = f.split('\n');

// Python much?
String.prototype.endswith = function (str) {
  if (this.substr(-str.length) === str) {
    return true;
  }
  return false;
};

var errors = [];

// run jshint on file
function jshint(file) {
  var cmd = s.exec('jshint ' + file, {silent: true});
  if (cmd.code !== 0) {
    errors.push({file: file, output: cmd.output});
  }
}

// echo errors
function done() {
  _.each(errors, function (error) {
    console.log(error.output);
  });
  // log build duration (in seconds)
  var time = new Date();
  var duration = '' + ((time.getTime() - start) / 1000);
  console.log('Finished in '.underline + duration.underline + 's'.underline);
  console.log('Aborting due to errors!'.red.inverse);
  s.exit(-1);
}

// Loop through files
_.each(files, function (file, i) {
  if (file.endswith('.js')) {
    jshint(file);
  }
  if ((i + 1) === files.length && _.isEmpty(errors) === false) {
    done();
  }
});